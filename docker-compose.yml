version: "3"

services:
  api:
    container_name: Backend
    build:
      context: ./src/api
    env_file:
      - .env
    networks:
      - shop-2025
    volumes:
      - ./src/api:/api
    expose:
      - "5173"
  #  frontend:
#    build:
#      context: .
#      dockerfile: ./src/nuxt/Dockerfile
#    env_file:
#      - .env
#    environment:
#      FRONTEND_PORT: ${FRONTEND_PORT}
#    ports:
#      - "${FRONTEND_PORT}:3000"
#    networks:
#      - shop-2025
  nginx:
    image: nginx:stable
    build: 
      context: ./containres/nginx
    env_file:
      - .env
    ports:
      - "80:80"
      - "${BACKEND_PORT}:5173"
    depends_on:
      - api
#      - frontend
    networks:
      - shop-2025
    volumes:
      - /etc/localtime:/etc/localtime/:ro
      - ./logs/nginx/:/var/log/nginx
    extra_hosts:
      - host.docker.internal:host-gateway
  postgres:
    image: postgres:latest
    container_name: postgres_container
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shop-2025
#  swagger:
#    image: swaggerapi/swagger-ui
#    container_name: "swagger-ui"
#    ports:
#      - "5174:5174"
#    networks:
#      - shop-2025
#  elasticsearch:
#    image: elasticsearch:8.16.3
#    container_name: elasticsearch
#    restart: always
#    volumes:
#      - elastic_data:/usr/share/elasticsearch/data/
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    networks:
#      - shop-2025

volumes:
  postgres_data:


networks:
  shop-2025:
    driver: bridge